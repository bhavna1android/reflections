How did viewing a diff between two versions of a file help you see the bug that was introduced?
A- If the first version is running correctly then the new updates only have errors in it. so by comparing both the versions we can actually find the bug.
How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
A- Easy access to the project history will let me know how my project proceeded step by step and the bugs that has been resolved time to time. This will help me not to repeat the mistakes and hence make me efficient.
What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
A-Pros: creating commits manually will give the programmer freedom to choose when to save the chANGES he made in the program. In this way the commits will not cluttered much and give a organised way to save changes.
  Cons: Manual saving can be tedious some time. have to save evrytime you made a change. sometimes if the programmer forgot to save a commit then it'll b diffficult to figure out the bug.
Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
A- Because Git is the most recent application for version control and have all the features which other old apps are lacking.
How can you use the commands git log and git diff to view the history of files?
A- git log will tell us all the commits done so far and git diff will tell how and what changes in two different commits have been done.
How might using version control make you more confident to make changes that could break something?
A- bacause using vc we can check the bugs in every version we change and can figure out the changes which created the bug.

